// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  donationsSent     Donation[] @relation("SentDonations")
  donationsReceived Donation[] @relation("ReceivedDonations")

  points      UserPoint[]
  redemptions RewardRedemption[]
  themeId     Int?
  theme       Theme?             @relation(fields: [themeId], references: [id])
}

model Donation {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  amount     Decimal
  currency   String
  message    String?
  createdAt  DateTime @default(now())

  sender        User           @relation("SentDonations", fields: [senderId], references: [id])
  receiver      User           @relation("ReceivedDonations", fields: [receiverId], references: [id])
  notifications Notification[]
}

model Notification {
  id         Int       @id @default(autoincrement())
  donationId Int
  sentAt     DateTime? @default(now())
  createdAt  DateTime  @default(now())

  donation Donation @relation(fields: [donationId], references: [id])
}

//
// --- TÍCH ĐIỂM ---
//
model UserPoint {
  id        Int      @id @default(autoincrement())
  userId    Int
  points    Int
  reason    String // ví dụ: "donation", "redemption", "bonus"
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

//
// --- QUÀ TẶNG ---
//
model Reward {
  id        Int      @id @default(autoincrement())
  name      String
  cost      Int // số points cần để đổi
  quantity  Int // số lượng còn lại
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  redemptions RewardRedemption[]
}

model RewardRedemption {
  id        Int      @id @default(autoincrement())
  userId    Int
  rewardId  Int
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  reward Reward @relation(fields: [rewardId], references: [id])
}

//
// --- SETTING ---
//
model Setting {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String
}

//
// --- THEME ---
//
model Theme {
  id   Int    @id @default(autoincrement())
  name String @unique

  users User[]
}
